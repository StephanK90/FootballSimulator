/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FootballSimulator;

import java.awt.Color;
import static javax.swing.JFrame.EXIT_ON_CLOSE;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Stephan
 */
public class MatchFrame extends javax.swing.JFrame {

    private final Group grp;
    private final DefaultTableModel dtm = new DefaultTableModel(); // create table model

    /**
     * Creates new form MatchOverviewFrame
     *
     * @param grp
     */
    
    // constructor with group as parameter
    public MatchFrame(Group grp) {
        initComponents();
        
        // set group
        this.grp = grp;
        
        // create and fill table with data
        setTableModel();
        fillTable(grp.getRoundNumber()-1);
    }
    
    public MatchFrame() {
        initComponents();
        
        // set group
        this.grp = new Group();
      
        this.grp.createMatches(); // create matches
        this.grp.createRanking(); // create ranking
        
        setTableModel();
        fillTable(grp.getRoundNumber()-1);       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        overviewLabel = new javax.swing.JLabel();
        roundLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        seeRankBtn = new javax.swing.JButton();
        playBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Football Simulator");
        setMinimumSize(new java.awt.Dimension(1000, 600));
        setResizable(false);
        setSize(new java.awt.Dimension(1000, 600));

        table.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        table.setEnabled(false);
        table.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(table);

        overviewLabel.setFont(new java.awt.Font("Cambria", 1, 36)); // NOI18N
        overviewLabel.setText("Match Overview");

        roundLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        roundLabel.setText("Round 1");

        jButton1.setText("Round 1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Round 2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Round 3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        seeRankBtn.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        seeRankBtn.setText("Go To Ranking");
        seeRankBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seeRankBtnActionPerformed(evt);
            }
        });

        playBtn.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        playBtn.setText("Play Round");
        playBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(seeRankBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(399, 399, 399)
                        .addComponent(playBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(273, 273, 273)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(365, 365, 365)
                        .addComponent(overviewLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addComponent(jButton1)
                        .addGap(115, 115, 115)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(119, 119, 119)
                                .addComponent(jButton3))
                            .addComponent(roundLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(275, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(overviewLabel)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton1))
                .addGap(104, 104, 104)
                .addComponent(roundLabel)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(playBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(seeRankBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // clear table and fill with selected rounds data
        clearTable();
        fillTable(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // clear table and fill with selected rounds data
        clearTable();
        fillTable(1);

        // make playRound button invisible if round 1 is not yet played
        if (grp.getRoundNumber() != 2) {
            playBtn.setVisible(false);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // clear table and fill with selected rounds data
        clearTable();
        fillTable(2);
        
        // make playRound button invisible if round 1 or 2 is not yet played
        if (grp.getRoundNumber()  != 3) {
            playBtn.setVisible(false);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void seeRankBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seeRankBtnActionPerformed
        RankingFrame frame = new RankingFrame(this.grp);    // create new frame and pass group as parameter
        frame.setLocationRelativeTo(null);                  // set frame to center of screen
        frame.setDefaultCloseOperation(EXIT_ON_CLOSE);      // exit on close
        frame.getContentPane().setBackground(Color.WHITE);  // set background color
        frame.setVisible(true);                             // set frame to visible
        this.dispose();                                     // close this frame
    }//GEN-LAST:event_seeRankBtnActionPerformed

    private void playBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playBtnActionPerformed
        int numberOfMatches = grp.getRounds().get(grp.getRoundNumber() - 1).getMatches().size(); // nr of matches to be played

        for (int i = 0; i < numberOfMatches; i++) {
            grp.getRounds().get(grp.getRoundNumber() - 1).getMatches().get(i).playMatch(); // simulate match
        }
        this.grp.createRanking();                                   // create ranking
        clearTable();                                               // clear table
        fillTable(grp.getRoundNumber()  - 1);                       // fill table
        grp.getRounds().get(grp.getRoundNumber()  - 1).isPlayed();  // set round as played
        playBtn.setVisible(false);                                  // make play round button invisible
        grp.setRoundNumber(grp.getRoundNumber()+1);                 // update current round of group
    }//GEN-LAST:event_playBtnActionPerformed

    // set table model and settings
    private void setTableModel() {
        table.setModel(dtm);                                                        // set table model
        table.setRowHeight(20);                                                     // set height of row
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();   // create renderer
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);                       // to render txt in center of columns
        table.setDefaultRenderer(Object.class, centerRenderer);                     // defines what types to render
        jScrollPane1.getViewport().setBackground(Color.WHITE);                      // sets background color
    }

    // fills table with match data
    private void fillTable(int roundNumber) {
        roundLabel.setText("Round" + " " + (roundNumber + 1)); // set label text
        int numberOfMatches = grp.getRounds().get(roundNumber).getMatches().size(); // nr of matches in current round

        // add columns
        dtm.addColumn("Team");
        dtm.addColumn("Goals");
        dtm.addColumn("Goals");
        dtm.addColumn("Team");

        // add rows
        for (int i = 0; i < numberOfMatches; i++) {
            Match m = grp.getRounds().get(roundNumber).getMatches().get(i);
            Object[] data = {m.getTeam1().getName(), m.getGoalsT1(), m.getGoalsT2(), m.getTeam2().getName()};
            dtm.addRow(data);
            dtm.addRow(new Object[]{});
        }

        // make play round button visible or not depending on current round
        if (grp.getRounds().get(roundNumber).getPlayed() == true) {
            playBtn.setVisible(false);
        } else {
            playBtn.setVisible(true);
        }
    }

    // clears the table
    private void clearTable() {
        dtm.setColumnCount(0);
        dtm.setRowCount(0);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel overviewLabel;
    private javax.swing.JButton playBtn;
    private javax.swing.JLabel roundLabel;
    private javax.swing.JButton seeRankBtn;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
